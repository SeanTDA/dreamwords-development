{"version":3,"sources":["components/header_components/HelpButton.js","components/Header.js","components/game_components/Streak.js","components/game_components/ImageClue.js","components/game_components/hangman_components/HangmanLetter.js","components/game_components/Hangman.js","components/game_components/lives_components/Life.js","components/game_components/Lives.js","components/game_components/keyboard_components/KeyboardKey.js","components/game_components/Keyboard.js","components/game_components/Rating.js","components/game_components/ShareButton.js","components/Game.js","components/Footer.js","components/ui_components/HelpMenu.js","levelData.js","gameOver.js","App.js","reportWebVitals.js","index.js"],"names":["HelpButton","setHelpMenuShown","useContext","AppContext","react_default","a","createElement","className","onClick","Header","gameTitle","header_components_HelpButton","Streak","_ref","streakType","appContext","displayStreak","streak","displaySuperStreak","superStreak","superStreakHighScore","superStreakClassName","streakClassName","ImageClue","levelData","id","src","imageURL","alt","HangmanLetter","letter","gameState","isLetterRevealed","pressedLetters","includes","toLowerCase","isLetterSpecial","isGameOver","Hangman","correctLetters","goalPhrase","split","classNameLine","map","correctLetter","hangman_components_HangmanLetter","Life","state","Lives","wrongLetters","livesCompletedPulse","setLivesCompletedPulse","life1ClassName","life2ClassName","life3ClassName","hearts","length","useEffect","setTimeout","console","log","lives_components_Life","KeyboardKey","keyVal","keyState","onSelectLetter","acceptSelectLetter","helpMenuShown","subclass","isSelected","Keyboard","isLastLetterCorrect","typeLetter","key","keys1","keys2","keys3","handleKeyboard","useCallback","event","forEach","document","addEventListener","removeEventListener","mainKeyboardClassName","onKeyDown","keyboard_components_KeyboardKey","Rating","ShareButton","levelIndex","gameURL","navigator","clipboard","writeText","copyData","i","getCopyData","Game","isGameRunning","game_components_Streak","game_components_ImageClue","game_components_Hangman","game_components_Lives","game_components_Rating","game_components_ShareButton","Fragment","game_components_Keyboard","Footer","HelpMenu","isHelpMenuShown","faderClassName","getHydranoidSpungus","Object","asyncToGenerator","_regeneratorRuntime","mark","_callee","todayDay","isDemoMode","invalodus","swolusin","hongolastian","tromus","grongus","blorbloxSolarin","solarDiff","sonuxPositron","wrap","_context","prev","next","localStorage","getItem","parseInt","setItem","abrupt","Date","getTime","Math","floor","stop","_x","_x2","_x3","apply","this","arguments","stribbleBlonkston","imbeloc","doopsie","String","fromCharCode","lottie","dollop","sam","danthony","stromboli","replace","spolasMolas","stremonst","getSprondlemonusTrobian","_ref2","_callee2","sporanoidPolaron","sblabby","metadataFilename","imageFilename","retrievedMetadata","retrievedImage","_context2","fetch","sent","json","solution","_x4","checkGameLost","checkGameWon","wonFlag","letterInGoalPhraseIndex","createContext","App","_useState","useState","_useState2","slicedToArray","setGameState","_useState3","_useState4","setLevelData","_useState5","_useState6","setPressedLetters","_useState7","_useState8","setCorrectLetters","_useState9","_useState10","setWrongLetters","_useState11","_useState12","setIsLastLetterCorrect","_useState13","_useState14","completedLevel","setCompletedLevel","_useState15","_useState16","setStreak","_useState17","_useState18","setSuperStreak","_useState19","_useState20","setSuperStreakHighScore","_useState21","_useState22","setAcceptSelectLetter","_useState23","_useState24","setGameTitle","_useState25","_useState26","setGameURL","_useState27","_useState28","setLevelIndex","_useState29","_useState30","_useState31","_useState32","_useState33","_useState34","history","setHistory","todayTimestamp","getFullYear","getMonth","getDate","getHours","getMinutes","then","hybronuSprillabrib","dailyLevelData","previousPageOpenDate","previousPageOpenDay","oneDayAfterPreviousPageOpenDay","newDayArrived","moreThanOneNewDayArrived","saveDataPreviousCompletedLevel","toString","saveDataCompletedLevel","saveDataPressedLetters","saveDataCorrectLetters","saveDataWrongLetters","saveDataStreak","saveDataSuperStreak","saveDataSuperStreakHighScore","saveDataHistory","JSON","parse","isFirstTime","currentHistory","newHistory","objectSpread","keys","push","historyResult","stringify","Provider","value","concat","toConsumableArray","components_Header","components_Game","components_Footer","ui_components_HelpMenu","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.5357049c.chunk.js","sourcesContent":["\r\n\r\nimport React, { useContext } from 'react';\r\nimport { AppContext } from \"../../App.js\";\r\n\r\n\r\n\r\nfunction HelpButton() {\r\n\r\n    const appContext = useContext(AppContext);\r\n    const { setHelpMenuShown } = appContext;\r\n\r\n    \r\n    function onButtonClicked () {\r\n        setHelpMenuShown(1);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        \r\n        <div className = \"header-helpMenuButton\" onClick={onButtonClicked}>\r\n                ?\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default HelpButton;","import React, { useContext } from 'react';\r\n\r\nimport { AppContext } from \"../App\";\r\n\r\n\r\nimport HelpButton from \"./header_components/HelpButton.js\";\r\n\r\n\r\nfunction Header() {\r\n\r\n    const appContext = useContext(AppContext);\r\n    const { gameTitle } = appContext;\r\n\r\n\r\n    return (\r\n        <div className=\"header\">\r\n        <div className=\"header-container\">\r\n\r\n            <div className=\"header-left\">\r\n            <HelpButton/>\r\n            </div>\r\n\r\n            <div className=\"header-center\">\r\n            {gameTitle}\r\n            </div>\r\n            </div>\r\n        </div>);\r\n}\r\n\r\nexport default Header;\r\n\r\n            /*\r\n \r\n            <table>\r\n                <tr>\r\n\r\n                    <th colSpan=\"3\" className=\"header-left\">\r\n                        <HelpButton/>\r\n                    </th>\r\n\r\n                    <th colSpan=\"3\" className=\"header-center\">\r\n                        {gameTitle}\r\n                    </th>\r\n\r\n                    <th colSpan=\"3\" className=\"header-right\">\r\n                         ....\r\n                    </th>\r\n                    \r\n                </tr>\r\n            </table>\r\n            */","\r\nimport React, { useContext } from 'react';\r\nimport { AppContext } from \"../../App\";\r\n\r\nfunction Streak({ streakType }) {\r\n\r\n    const appContext = useContext(AppContext);\r\n    const { streak, superStreak, superStreakHighScore } = appContext;\r\n\r\n\r\n    //if (streak <= 0) return;\r\n    let displayStreak = streak;\r\n    let displaySuperStreak = superStreak;\r\n    let displaySuperStreakHighScore = superStreakHighScore;\r\n\r\n\r\n\r\n    if (displayStreak <= 0) displayStreak = 0;\r\n    if (displaySuperStreak <= 0) displaySuperStreak = 0;\r\n\r\n    let superStreakClassName = displaySuperStreak > 0 ? \"superStreak\" : \"superStreakInvisible\";\r\n\r\n\r\n    const streakClassName = displayStreak > 0 ? \"aliveStreak\" : \"aliveStreak aliveStreakDull\";\r\n\r\n\r\n    // High score display \r\n    superStreakClassName += \" superStreakHighScore\";\r\n    /*const isBeatingOrEqualToHighScore = displaySuperStreak >= displaySuperStreakHighScore;\r\n    if (isBeatingOrEqualToHighScore)\r\n        superStreakClassName += \" superStreakHighScore\";\r\n\r\n    let superStreakHighScoreSuffix = \"\";\r\n    if (!isBeatingOrEqualToHighScore)\r\n        superStreakHighScoreSuffix += \" / \" + displaySuperStreakHighScore;\r\n    */\r\n\r\n\r\n\r\n\r\n    return (\r\n            <div className=\"streak\">\r\n                <div className={streakClassName}>\r\n                    🔥 streak : {displayStreak}\r\n                </div>\r\n\r\n                <div className={superStreakClassName}>\r\n                    ⚡ s.streak : {displaySuperStreak}\r\n                </div>\r\n\r\n            </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Streak;","import React, {useContext} from 'react';\r\n\r\nimport {AppContext} from \"../../App\"; \r\n\r\n\r\nfunction ImageClue () {\r\n\r\n\r\n    const appContext = useContext(AppContext);\r\n    const {levelData} = appContext;\r\n\r\n//\r\n//<img id=\"imageClueImage\" src=\"https://ipfs.io/ipfs/QmYiTM4uSYryNq3KhvLc7WKnnHH7STe69WfyXcPtZDMP9T/00000000000000000000000000001100.png\" alt=\"Image\"/>\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n         <img id=\"imageClueImage\" src={levelData.imageURL} alt=\"Image\"/>\r\n            <div className = \"imageClue-tagline\">\r\n            generated by MidJourney\r\n            </div>\r\n        </div>\r\n        \r\n        );\r\n}\r\n\r\nexport default ImageClue;","import React, { useContext } from 'react';\r\n\r\nimport { AppContext } from \"../../../App\";\r\n\r\nfunction HangmanLetter({ letter }) {\r\n\r\n\r\n    const appContext = useContext(AppContext);\r\n    const {gameState, pressedLetters } = appContext;\r\n\r\n\r\n    const isLetterRevealed = pressedLetters.includes(letter.toLowerCase());\r\n    const isLetterSpecial = letter === \" \" || letter === \".\" || letter === \"\\n\";\r\n\r\n\r\n\r\n    let className = \"hangmanLetter\";\r\n\r\n    if (isLetterRevealed) {\r\n        className += \" hangmanLetter-revealed\";\r\n    }\r\n\r\n\r\n    const isGameOver = gameState === \"GAME_WON\" || gameState === \"GAME_LOST\";\r\n    if (isGameOver) {\r\n        if (isLetterRevealed) {\r\n            className += \" hangmanLetter-gameOver-correct\";\r\n        } else {\r\n            className += \" hangmanLetter-gameOver-mistake\";\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <span className={className}>\r\n            {\r\n                (isLetterRevealed || isLetterSpecial || isGameOver) ? letter : \"_\"\r\n            }\r\n        </span>\r\n    );\r\n}\r\n\r\nexport default HangmanLetter;","import React, { useContext } from 'react';\r\n\r\nimport { AppContext } from \"../../App\";\r\n\r\n\r\nimport HangmanLetter from './hangman_components/HangmanLetter';\r\n\r\nfunction Hangman() {\r\n\r\n\r\n    const appContext = useContext(AppContext);\r\n    const { gameState, levelData } = appContext;\r\n\r\n\r\n    let goalPhrase = levelData.goalPhrase; // replace with proper\r\n    // correctPhrase = \"sean is an awesome guy that enjoys staying up late making games\"; // replace with proper\r\n    // correctPhrase = \"hello 123 my name is COOL SEAN\";\r\n    // correctPhrase = \"my\";\r\n    //correctPhrase = \"afdhafjkdhgjhfadkjlg akjlgmcklafdvnjkaf afknlghkla\";\r\n\r\n\r\n    const isGameOver = gameState === \"GAME_WON\" || gameState === \"GAME_LOST\";\r\n\r\n    const correctLetters = goalPhrase.split(\"\");\r\n\r\n    const className = \"hangman\";\r\n    const classNameLine = isGameOver ? \"hangman-line hangman-line-gameOver\" : \"hangman-line\";\r\n\r\n\r\n    return (\r\n        <div className={className}>\r\n\r\n            <div className={classNameLine}>\r\n                <span>\r\n                    {\r\n                        correctLetters.map((correctLetter) => { return <HangmanLetter letter={correctLetter} /> })\r\n                    }\r\n                </span>\r\n            </div>\r\n        </div>);\r\n\r\n\r\n\r\n    /*\r\n\r\n    const correctWords = goalPhrase.split(\" \");\r\n\r\n\r\n    return (\r\n        <div className=\"hangman\">\r\n\r\n            <div className=\"hangman-line\">\r\n                {\r\n                    correctWords.map((word) => { return <HangmanWord word={word} /> })\r\n                }\r\n            </div>\r\n        </div>);*/\r\n}\r\n\r\nexport default Hangman;","\r\nfunction Life({ state }) {\r\n\r\n    if (state === \"FULL\")\r\n        return (\"❤️\");\r\n    if (state === \"EMPTY\")\r\n        return (\"🖤\");\r\n}\r\n\r\nexport default Life;","import React, { useContext, useEffect } from 'react';\r\n\r\nimport Life from \"./lives_components/Life\";\r\n\r\nimport { AppContext } from \"../../App\";\r\n\r\nfunction Lives() {\r\n\r\n    const appContext = useContext(AppContext);\r\n    const { wrongLetters, gameState, livesCompletedPulse, setLivesCompletedPulse } = appContext;\r\n\r\n\r\n    let life1ClassName = \"lives-life\";\r\n    let life2ClassName = \"lives-life\";\r\n    let life3ClassName = \"lives-life\";\r\n\r\n\r\n    const hearts = 3 - wrongLetters.length;\r\n\r\n\r\n    useEffect(() => {\r\n        const isGameOver = gameState === \"GAME_WON\" || gameState === \"GAME_LOST\";\r\n        if (isGameOver) {\r\n\r\n            if (hearts > 0)\r\n            setTimeout(() => {\r\n                console.log(\"lives = \" + livesCompletedPulse);\r\n                setLivesCompletedPulse([1, 0, 0]);\r\n            }, 500);\r\n\r\n\r\n            if (hearts > 1)\r\n            setTimeout(() => {\r\n                console.log(\"lives = \" + livesCompletedPulse);\r\n                setLivesCompletedPulse([1, 1, 0 ]);\r\n            }, 800);\r\n\r\n            if (hearts > 2)\r\n            setTimeout(() => {\r\n                console.log(\"lives = \" + livesCompletedPulse);\r\n                setLivesCompletedPulse([1, 1,1]);\r\n            }, 1100);\r\n\r\n        }\r\n\r\n    }, [gameState]);\r\n\r\n\r\n    if (livesCompletedPulse[0] === 1)\r\n        life1ClassName = \"lives-life-completed\";\r\n    if (livesCompletedPulse[1] === 1)\r\n        life2ClassName = \"lives-life-completed\";\r\n    if (livesCompletedPulse[2] === 1)\r\n        life3ClassName = \"lives-life-completed\";\r\n\r\n\r\n\r\n\r\n    return (<div className=\"lives\">\r\n\r\n        <span className={life1ClassName}>\r\n            <Life state={wrongLetters.length >= 3 ? \"EMPTY\" : \"FULL\"} />\r\n        </span>\r\n        <span className={life2ClassName}>\r\n            <Life state={wrongLetters.length >= 2 ? \"EMPTY\" : \"FULL\"} />\r\n        </span>\r\n        <span className={life3ClassName}>\r\n            <Life state={wrongLetters.length >= 1 ? \"EMPTY\" : \"FULL\"} />\r\n        </span>\r\n\r\n    </div>);\r\n}\r\n\r\n//   <Life state=\"EMPTY\"/>\r\n\r\nexport default Lives;","import React, { useContext } from 'react';\r\nimport { AppContext } from \"../../../App.js\";\r\n\r\nfunction KeyboardKey({ keyVal, keyState }) {\r\n\r\n    const appContext = useContext(AppContext);\r\n    const { onSelectLetter, acceptSelectLetter, helpMenuShown, gameState } = appContext;\r\n\r\n\r\n\r\n    const selectLetter = () => {\r\n        onSelectLetter(keyVal);\r\n    }\r\n\r\n    let className = \"keyboardKey\";\r\n\r\n    let subclass = \"keyboardKey-disabled\";\r\n\r\n    if (keyState === \"MISTAKE\")\r\n        subclass = \" keyboardKey-mistake\";\r\n\r\n    if (keyState === \"CORRECT\")\r\n        subclass = \" keyboardKey-correct\";\r\n\r\n    if (keyState === \"ENABLED\")\r\n        subclass = \" keyboardKey-enabled\";\r\n\r\n\r\n    const isSelected = keyState === \"MISTAKE\" || keyState === \"CORRECT\";\r\n\r\n    if (isSelected)\r\n        subclass += \" keyboardKey-selected\";\r\n\r\n    if (!acceptSelectLetter && !isSelected)\r\n        subclass = \" keyboardKey-waiting-for-input\";\r\n\r\n\r\n        \r\n    //if (helpMenuShown === 1)\r\n    //    subclass += \" keyboardKey-disabled\";\r\n\r\n\r\n    className += subclass;\r\n\r\n    if (gameState === \"RUNNING\" || gameState === \"GAME_LOST\" || gameState === \"GAME_WON\") {\r\n\r\n        return (\r\n            <div className={className} onClick={selectLetter}>\r\n                {keyVal}\r\n    \r\n            </div>);\r\n    } else {\r\n        return (<div/>);\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default KeyboardKey;","import React, { useContext, useCallback, useEffect } from 'react';\r\n\r\nimport KeyboardKey from './keyboard_components/KeyboardKey';\r\n\r\nimport { AppContext } from \"../../App\";\r\n\r\nfunction Keyboard() {\r\n\r\n\r\n    const appContext = useContext(AppContext);\r\n    const { onSelectLetter, levelData, gameState, pressedLetters, isLastLetterCorrect } = appContext;\r\n\r\n\r\n    const typeLetter = (key) => {\r\n        onSelectLetter(key);\r\n    }\r\n\r\n    const keys1 = [\"Q\", \"W\", \"E\", \"R\", \"T\", \"Y\", \"U\", \"I\", \"O\", \"P\"];\r\n    const keys2 = [\"A\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\", \"L\"];\r\n    const keys3 = [\"Z\", \"X\", \"C\", \"V\", \"B\", \"N\", \"M\"];\r\n\r\n\r\n    const handleKeyboard = useCallback((event) => {\r\n        keys1.forEach((key) => { if (event.key.toLowerCase() === key.toLowerCase()) { typeLetter(key); } });\r\n        keys2.forEach((key) => { if (event.key.toLowerCase() === key.toLowerCase()) { typeLetter(key); } });\r\n        keys3.forEach((key) => { if (event.key.toLowerCase() === key.toLowerCase()) { typeLetter(key); } });\r\n    });\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(\"keydown\", handleKeyboard);\r\n        return () => {\r\n            document.removeEventListener(\"keydown\", handleKeyboard)\r\n        };\r\n    }, [handleKeyboard]);\r\n\r\n\r\n\r\n    const isGameOver = gameState === \"GAME_WON\" || gameState === \"GAME_LOST\";\r\n\r\n    let mainKeyboardClassName = \"keyboard\";\r\n\r\n    if (isLastLetterCorrect === 0)\r\n        mainKeyboardClassName += \" keyboard-mistake\";\r\n    if (isLastLetterCorrect === 1)\r\n        mainKeyboardClassName += \" keyboard-correct\";\r\n\r\n    if (isGameOver)\r\n        mainKeyboardClassName += \" keyboard-gameOver\";\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={mainKeyboardClassName} onKeyDown={handleKeyboard}>\r\n            <div className=\"keyboard-line\">\r\n                {keys1.map((key) => {\r\n                    return <KeyboardKey keyVal={key}\r\n                        keyState={\r\n                            gameState === \"RUNNING\" ? (pressedLetters.includes(key.toLowerCase()) ? (levelData.goalPhrase.toLowerCase().includes(key.toLowerCase()) ? \"CORRECT\" : \"MISTAKE\") : \"ENABLED\") : \"DISABLED\"\r\n                        }\r\n                    />\r\n                })}\r\n            </div>\r\n            <div className=\"keyboard-line\">\r\n                {keys2.map((key) => {\r\n                    return <KeyboardKey keyVal={key}\r\n                        keyState={\r\n                            gameState === \"RUNNING\" ? (pressedLetters.includes(key.toLowerCase()) ? (levelData.goalPhrase.toLowerCase().includes(key.toLowerCase()) ? \"CORRECT\" : \"MISTAKE\") : \"ENABLED\") : \"DISABLED\"\r\n                        }\r\n                    />\r\n                })}\r\n            </div>\r\n            <div className=\"keyboard-line\">\r\n                {keys3.map((key) => {\r\n                    return <KeyboardKey keyVal={key}\r\n                        keyState={\r\n                            gameState === \"RUNNING\" ? (pressedLetters.includes(key.toLowerCase()) ? (levelData.goalPhrase.toLowerCase().includes(key.toLowerCase()) ? \"CORRECT\" : \"MISTAKE\") : \"ENABLED\") : \"DISABLED\"\r\n                        }\r\n                    />\r\n                })}\r\n            </div>\r\n\r\n        </div>);\r\n}\r\n\r\nexport default Keyboard;","import React, { useContext }  from 'react';\r\nimport { AppContext } from \"../../App\";\r\n\r\n\r\nfunction Rating () {\r\n\r\n    const appContext = useContext(AppContext);\r\n    const { wrongLetters } = appContext;\r\n\r\n    const hearts = 3 - wrongLetters.length;\r\n\r\n\r\n\r\n    return (<div> \r\n        \r\n        {hearts}/3\r\n        \r\n        <br/>\r\n         </div>\r\n         \r\n         \r\n         );\r\n}\r\n\r\nexport default Rating;","import React, { useContext }  from 'react';\r\nimport { AppContext } from \"../../App\";\r\n\r\n\r\n\r\n\r\nfunction ShareButton () {\r\n\r\n    const appContext = useContext(AppContext);\r\n    const { gameTitle, levelIndex, wrongLetters, superStreak, streak, gameURL } = appContext;\r\n\r\n    const hearts = 3 - wrongLetters.length;\r\n\r\n\r\n    function getCopyData () {\r\n        let copyData = \"\";\r\n        copyData += gameTitle + \" \";\r\n        copyData += \"#\" + (levelIndex+1);\r\n        copyData += \"\\n\";\r\n        for (let i = 0; i < 3; i++)\r\n            copyData += hearts > i ? \"❤️\" : \"🖤\";\r\n        copyData += \"\\n\";\r\n        copyData += \"🔥x\"+streak + \" \" + \"⚡x\"+superStreak;\r\n        copyData += \"\\n\";\r\n        copyData += gameURL;\r\n\r\n        return copyData;\r\n    }\r\n\r\n\r\n    function onShareButtonClicked () {\r\n        navigator.clipboard.writeText(getCopyData());\r\n    }\r\n\r\n    return (<div>\r\n        \r\n        <button onClick={onShareButtonClicked}>\r\n         Share Button \r\n         </button>\r\n\r\n         </div>);\r\n\r\n\r\n\r\n}\r\n\r\nexport default ShareButton;","import React, { useContext } from 'react';\r\n\r\nimport { AppContext } from \"../App\";\r\n\r\n\r\nimport Streak from \"./game_components/Streak.js\";\r\nimport ImageClue from \"./game_components/ImageClue.js\";\r\nimport Hangman from \"./game_components/Hangman.js\";\r\nimport Lives from \"./game_components/Lives.js\";\r\nimport Keyboard from \"./game_components/Keyboard.js\";\r\nimport Rating from \"./game_components/Rating.js\";\r\nimport ShareButton from \"./game_components/ShareButton.js\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Game() {\r\n\r\n\r\n    const appContext = useContext(AppContext);\r\n    const { gameState, levelData, helpMenuShown } = appContext;\r\n\r\n    const isGameRunning = gameState === \"RUNNING\";\r\n    const isGameOver = gameState === \"GAME_WON\" || gameState === \"GAME_LOST\";\r\n\r\n    const isHelpMenuShown = helpMenuShown == 1;\r\n\r\n    return (\r\n        <div className=\"game\">\r\n\r\n\r\n            <div className=\"centerElements\">\r\n                <Streak />\r\n                <ImageClue />\r\n                <Hangman />\r\n                {\r\n                    isGameOver ?\r\n                        <div> <Lives /><Rating /><ShareButton /> </div> :\r\n                        isGameRunning ?\r\n                        <Lives /> : <> </>\r\n                }\r\n\r\n            </div>\r\n\r\n\r\n\r\n            {\r\n                !isGameOver ?\r\n                    <Keyboard /> :\r\n                    <div />\r\n            }\r\n\r\n\r\n\r\n\r\n        </div>);\r\n}\r\n\r\nexport default Game;","import React from 'react';\r\n\r\nfunction Footer () {\r\n    return (\r\n    <div className = \"footer\"> \r\n        \r\n        \r\n\r\n        <div className = \"footer-discord\" >\r\n        <img src=\"images/discord-icon.svg\" alt=\"Discord\"/>\r\n        </div>\r\n\r\n        \r\n    </div>\r\n    \r\n    \r\n    );\r\n}\r\n\r\nexport default Footer;","\r\n\r\nimport React, { useContext } from 'react';\r\nimport { AppContext } from \"../../App.js\";\r\n\r\n\r\n\r\nfunction HelpMenu() {\r\n\r\n    const appContext = useContext(AppContext);\r\n    const { setHelpMenuShown, helpMenuShown } = appContext;\r\n\r\n\r\n    function onButtonClicked () {\r\n        setHelpMenuShown(0);\r\n    }\r\n\r\n    const isHelpMenuShown = helpMenuShown === 1;\r\n\r\n\r\n    let faderClassName = \"helpMenu-fader\";\r\n\r\n    if (isHelpMenuShown) {\r\n        faderClassName += \" helpMenu-fader-active\";\r\n    }\r\n    \r\n\r\n    return (\r\n        <div>\r\n\r\n            <div className={faderClassName}> \r\n\r\n            {isHelpMenuShown ? \r\n\r\n                <div className = \"helpMenu-container\"> \r\n                    <div className = \"helpMenu-header\"> \r\n                    \r\n                        <span>\r\n                            <span> HOW TO PLAY </span>\r\n                            \r\n                            <span className = \"helpMenu-closeButton\" onClick={onButtonClicked}> \r\n                                X\r\n                            </span>\r\n                        </span>\r\n                    \r\n                    </div>\r\n                </div>\r\n            \r\n                :\r\n                <div/>\r\n\r\n            }\r\n            \r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default HelpMenu;","\r\n\r\n\r\n\r\n\r\nexport const getHydranoidSpungus = async (todayDay, isDemoMode, invalodus) => {\r\n\r\n  if (isDemoMode) {\r\n    let swolusin = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19];\r\n    // swolusin = [15,15,15,15,15];\r\n\r\n    let hongolastian = localStorage.getItem(\"SAVE_DEMO_SPORANICOLT\");\r\n    if (hongolastian == null) hongolastian = 0;\r\n    let tromus = parseInt(hongolastian);\r\n    const grongus = tromus;\r\n    tromus += 1;\r\n    if (tromus > swolusin.length - 1) tromus = 0;\r\n    localStorage.setItem(\"SAVE_DEMO_SPORANICOLT\", tromus);\r\n    return swolusin[grongus];\r\n  }\r\n\r\n\r\n  let blorbloxSolarin = 0;\r\n  const sbribblest = 5;  // m\r\n  const scrindolg = 13;  // d\r\n  const scolung = 1011 * 2; // y\r\n  if (invalodus === 0)\r\n    blorbloxSolarin = new Date(scolung, sbribblest, scrindolg);\r\n  if (invalodus === 1)\r\n    blorbloxSolarin = new Date(scolung, sbribblest, scrindolg, 12 + 10, 36);\r\n  const solarDiff = todayDay.getTime() - blorbloxSolarin.getTime();\r\n  let sonuxPositron = 0;\r\n  if (invalodus === 0)\r\n    sonuxPositron = Math.floor(((solarDiff / 1000) / 60) / (60 * 24));\r\n  if (invalodus === 1)\r\n    sonuxPositron = Math.floor((solarDiff / 1000) / 60) % 10;\r\n  if (sonuxPositron < 0) sonuxPositron = 0;\r\n  return sonuxPositron;\r\n}\r\n\r\n\r\nexport const stribbleBlonkston = (imbeloc) => {\r\n  const i = imbeloc + 15;\r\n  const doopsie = String.fromCharCode((i % 15) + 97);\r\n  const lottie = (i * 6) % 12;\r\n  const dollop = String.fromCharCode(((i * 2) % 10) + 105);\r\n  const sam = 500 - (Math.floor((i + 569.3) * 46.85) % 105);\r\n  const danthony = Math.floor((67.5 + i) * 978.54) % 101;\r\n  const greg = Math.floor(7 + ((i * 12.3) % 5.5) + 12327) % 56781;\r\n  const dro = String.fromCharCode((i % 9) + 107) + String.fromCharCode((i % 12) + 108) + String.fromCharCode(103 + (i % 17));\r\n  const pebble = Math.floor(i * 6.14159) % 9684;\r\n  const plub = Math.floor(i * 11.93) % 2680;\r\n  let stromboli = \"\" + lottie + greg + dro + pebble + plub + dollop + sam + danthony;\r\n  if (stromboli.length % 2 === 1)\r\n    stromboli = doopsie + stromboli;\r\n  stromboli = stromboli.replace(\"{\", \"\");\r\n  return stromboli;\r\n\r\n};\r\n\r\nexport const spolasMolas = (stremonst) => {\r\n  const i = stremonst + 33;\r\n  const doopsie = String.fromCharCode((i % 26) + 97);\r\n  const lottie = (i * 5) % 16;\r\n  const dollop = String.fromCharCode(((i * 2) % 19) + 105);\r\n  const sam = 500 - (Math.floor((i + 19.3) * 46.85) % 305);\r\n  const danthony = Math.floor((67.5 + i) * 978.54) % 101;\r\n  const greg = (7 + i + 12327) % 56781;\r\n  const dro = String.fromCharCode((i % 9) + 107) + String.fromCharCode((i % 12) + 108) + String.fromCharCode(103 + (i % 17));\r\n  const pebble = Math.floor(i * 3.14159) % 9684;\r\n  const plub = Math.floor(i * 18.93) % 1680;\r\n  let stromboli = \"\" + (lottie) + dollop + (sam) + (danthony) + (greg) + dro + (pebble) + (plub);\r\n  if (stromboli.length % 2 === 0)\r\n    stromboli = doopsie + stromboli;\r\n  stromboli = stromboli.replace(\"{\", \"\");\r\n  return stromboli;\r\n};\r\n\r\nexport const getSprondlemonusTrobian = async (sporanoidPolaron) => {\r\n\r\n  let levelData = {};\r\n\r\n  const stromboli = stribbleBlonkston(sporanoidPolaron);\r\n  const sblabby = spolasMolas(sporanoidPolaron);\r\n\r\n  console.log(\"meta: \" + stromboli + \" img: \" + sblabby);\r\n\r\n  const metadataFilename = \"https://raw.githubusercontent.com/SeanTDA/dreamwords-placeholder/main/files/metadata_\" + stromboli + \".json\";\r\n  const imageFilename = \"https://raw.githubusercontent.com/SeanTDA/dreamwords-placeholder/main/files/image_\" + sblabby + \".png\";\r\n\r\n  const retrievedMetadata = await (await fetch(metadataFilename)).json();\r\n  const retrievedImage = imageFilename;\r\n\r\n  console.log(\"Retrieving: \" + metadataFilename);\r\n  console.log(\"Retrieving: \" + imageFilename);\r\n\r\n\r\n\r\n\r\n\r\n\r\n  levelData.goalPhrase = retrievedMetadata.solution;\r\n  levelData.imageURL = retrievedImage;\r\n\r\n\r\n  //levelData.goalPhrase = \"eroded psychedelic jelly\";\r\n\r\n\r\n  return levelData;\r\n}","\r\nexport const checkGameLost = (wrongLetters) => {\r\n    return wrongLetters.length >= 3;\r\n}\r\n\r\n\r\nexport const checkGameWon = (correctLetters, goalPhrase) => {\r\n\r\n    var wonFlag = true;\r\n    for (var letterInGoalPhraseIndex = 0; letterInGoalPhraseIndex < goalPhrase.length; letterInGoalPhraseIndex++) {\r\n        if (goalPhrase[letterInGoalPhraseIndex] === \" \") continue; // skips white space\r\n        if (!correctLetters.includes(goalPhrase[letterInGoalPhraseIndex])) wonFlag = false;\r\n    }\r\n\r\n\r\n\r\n\r\n    return wonFlag;\r\n}\r\n","\nimport './App.css';\nimport React, { createContext, useEffect, useState } from \"react\";\n\nimport Header from \"./components/Header.js\";\nimport Game from \"./components/Game.js\";\nimport Footer from \"./components/Footer.js\";\nimport HelpMenu from \"./components/ui_components/HelpMenu.js\";\n\nimport { getHydranoidSpungus, getSprondlemonusTrobian } from './levelData';\n\nimport { checkGameLost, checkGameWon } from './gameOver';\n\nexport const AppContext = createContext();\n\n\n\n\n\n\n\n\n\nfunction App() {\n\n  // CONTEXT VARIABLE DECLARATION\n\n  const [gameState, setGameState] = useState(\"LOADING\");\n  const [levelData, setLevelData] = useState({\n    goalPhrase: \"...\",\n    imageURL: \"images/loading-image.png\"\n  });\n  const [pressedLetters, setPressedLetters] = useState([]);\n  const [correctLetters, setCorrectLetters] = useState([]);\n  const [wrongLetters, setWrongLetters] = useState([]);\n  const [isLastLetterCorrect, setIsLastLetterCorrect] = useState(-1);\n  const [completedLevel, setCompletedLevel] = useState(-1);\n  const [streak, setStreak] = useState(-1);\n  const [superStreak, setSuperStreak] = useState(-1);\n  const [superStreakHighScore, setSuperStreakHighScore] = useState(-1);\n  const [acceptSelectLetter, setAcceptSelectLetter] = useState(true);\n  const [gameTitle, setGameTitle] = useState(\"\");\n  const [gameURL, setGameURL] = useState(\"\");\n  const [levelIndex, setLevelIndex] = useState(-1);\n  const [livesCompletedPulse, setLivesCompletedPulse] = useState([-1, -1, -1]);\n  const [helpMenuShown, setHelpMenuShown] = useState(-1);\n  const [history, setHistory] = useState({}); // { \"daysPlayed\": [0,1,2,3,4,8,9,34,35], \"results\" : { 0:{\"correctLetters\":[], \"wrongLetters\"[]},  1:{\"correctLetters\":[], \"wrongLetters\"[]}, ...  } }  \n\n\n\n  // CONSTANTS\n  const GAME_TITLE = \"Dream Guesser\";\n  const GAME_URL = \"www.blah.com\";\n  const DEMO_MODE = false;\n  const INTERVAL = 1; // 0 = day, 1 = minute\n  const KEY_DELAY_MS = 400;\n\n\n  // EVENTS\n\n  const onSelectLetter = (keyVal) => {\n\n    keyVal = keyVal.toLowerCase();\n\n\n    if (gameState !== \"RUNNING\") return; // ignore key inputs if game is not running\n    if (helpMenuShown === 1) return; // ignore key inputs if help menu is shown\n\n    if (pressedLetters.includes(keyVal)) return; // ignore key inputs if letter has been pressed\n\n    if (!acceptSelectLetter) return;\n    setAcceptSelectLetter(false);\n\n    setTimeout(() => {\n      setAcceptSelectLetter(true);\n    }, KEY_DELAY_MS);\n\n    // adds it to the pressed keys\n    setPressedLetters((prev) => [...prev, keyVal]);\n\n    // checks if its wrong or right. Adds it to that\n    if (levelData.goalPhrase.toLowerCase().includes(keyVal)) {\n      setCorrectLetters((prev) => [...prev, keyVal]);\n      setIsLastLetterCorrect(1);\n    } else {\n      setWrongLetters((prev) => [...prev, keyVal]);\n      setIsLastLetterCorrect(0);\n    }\n\n  }\n\n\n\n  console.log(\">>>>>>>>>>> todo: once you win / lose, add end screen\");\n  console.log(\">>>>>>>>>>> todo: add [?] help guide with example carousel\"); // should explain streak / superstreak\n  console.log(\">>>>>>>>>>> todo: better lives UI\");\n  console.log(\">>>>>>>>>>> todo: super streak high score\");\n  console.log(\">>>>>>>>>>> todo: get images onto AWS\");\n  console.log(\">>>>>>>>>>> todo: add button to load demo showoff mode\");\n  console.log(\">>>>>>>>>>> todo: keep a running track of how you went everyday  (array of {day, result} ) for prosperity / future proofing\");\n  console.log(\">>>>>>>>>>> todo: Test help menu when a first time player starts\");\n\n  console.log(\">>>>>>>>>>> todo: test to see if the daily system works:  [daily image], [building streak / super streak], [skipping a day]\");\n  console.log(\">>>>>>>>>>> todo: better streak icons UI\");\n  console.log(\">>>>>>>>>>> todo: add proper footer stuff\");\n  console.log(\">>>>>>>>>>> todo: do a test deploy\");\n  console.log(\">>>>>>>>>>> todo: test mobile share button copy (android / ios)\");\n  console.log(\">>>>>>>>>>> todo: [EXTERNAL] --- ensure ergonomic keyboard/scaling on mobile\");\n  console.log(\">>>>>>>>>>> todo: [EXTERNAL] --- fix letters moving on new line\");\n  console.log(\">>>>>>>>>>> todo: [EXTERNAL] --- header help button is pushing the title off the center (fix alignment)\");\n\n\n\n\n  // ------ INITIALISATION\n\n  const todayTimestamp = new Date();\n\n  let todayDay = new Date();\n\n  if (INTERVAL === 0)\n    todayDay = new Date(todayTimestamp.getFullYear(), todayTimestamp.getMonth(), todayTimestamp.getDate()); // day refresh\n  if (INTERVAL === 1)\n    todayDay = new Date(todayTimestamp.getFullYear(), todayTimestamp.getMonth(), todayTimestamp.getDate(), todayTimestamp.getHours(), todayTimestamp.getMinutes());   // minutes refresh\n\n\n\n\n\n  useEffect(() => {\n //   localStorage.clear();\n\n\n  //  localStorage.clear(\"SAVE_HISTORY\");\n\n    setGameTitle(GAME_TITLE);\n    setGameURL(GAME_URL);\n\n    // Load Level\n    getHydranoidSpungus(todayDay, DEMO_MODE, INTERVAL).then((hybronuSprillabrib) => {\n      setLevelIndex(hybronuSprillabrib);\n      console.log(\"image index: \" + hybronuSprillabrib);\n      getSprondlemonusTrobian(hybronuSprillabrib).then((dailyLevelData) => {\n        setGameState(\"RUNNING\");\n        setLevelData(dailyLevelData);\n      }).then(() => {\n\n\n        // Check to see if new day has passed (compare it to the previous save time stamp and update it)\n        let previousPageOpenDate = new Date(localStorage.getItem(\"SAVE_TIMESTAMP_OPEN\")); // todo < test with a different thing (as a new user)\n        if (previousPageOpenDate === null)\n          previousPageOpenDate = todayTimestamp;\n\n\n        let previousPageOpenDay = new Date();\n\n        // get a new date with just the DAY\n        if (INTERVAL === 0)\n          previousPageOpenDay = new Date(previousPageOpenDate.getFullYear(), previousPageOpenDate.getMonth(), previousPageOpenDate.getDate()); // day previous\n\n        if (INTERVAL === 1)\n          previousPageOpenDay = new Date(previousPageOpenDate.getFullYear(), previousPageOpenDate.getMonth(), previousPageOpenDate.getDate(), previousPageOpenDate.getHours(), previousPageOpenDate.getMinutes()); // minute previous\n\n\n        let oneDayAfterPreviousPageOpenDay = new Date();\n\n\n        if (INTERVAL === 0)\n          oneDayAfterPreviousPageOpenDay = new Date(previousPageOpenDay.getFullYear(), previousPageOpenDay.getMonth(), previousPageOpenDay.getDate() + 1);\n\n        if (INTERVAL === 1)\n          oneDayAfterPreviousPageOpenDay = new Date(previousPageOpenDay.getFullYear(), previousPageOpenDay.getMonth(), previousPageOpenDay.getDate(), previousPageOpenDay.getHours(), previousPageOpenDay.getMinutes() + 1);\n\n\n        let newDayArrived = previousPageOpenDay < todayDay;\n        let moreThanOneNewDayArrived = oneDayAfterPreviousPageOpenDay < todayDay;\n\n        // ensures every refresh will clear data\n        if (DEMO_MODE)\n          newDayArrived = true;\n\n\n        console.log(\"Comparing days: \" + previousPageOpenDay + \"  \" + todayDay);\n\n\n        // If new day arrived, \n        if (newDayArrived) {\n          // and the previous level hasnt been completed yet\n          const saveDataPreviousCompletedLevel = localStorage.getItem(\"SAVE_COMPLETED_LEVEL\");\n          if (saveDataPreviousCompletedLevel != null && parseInt(saveDataPreviousCompletedLevel) === 0) {\n\n            // reset streak\n            if (!DEMO_MODE) {\n              localStorage.setItem(\"SAVE_STREAK\", 0);\n              localStorage.setItem(\"SAVE_STREAK_SUPER\", 0);\n            }\n          }\n\n          // clear save data\n          localStorage.setItem(\"SAVE_PRESSED_LETTERS\", []);\n          localStorage.setItem(\"SAVE_CORRECT_LETTERS\", []);\n          localStorage.setItem(\"SAVE_WRONG_LETTERS\", []);\n          localStorage.setItem(\"SAVE_COMPLETED_LEVEL\", 0);\n          console.log(\"!!!! New day arrived\");\n        }\n\n\n\n        // if more than one day has passed since you last opened (skipped a day)\n        if (moreThanOneNewDayArrived) {\n          // reset streak\n          if (!DEMO_MODE) {\n            localStorage.setItem(\"SAVE_STREAK\", 0);\n            localStorage.setItem(\"SAVE_STREAK_SUPER\", 0);\n          }\n\n        }\n\n\n        // Update saved timestamp to now\n        localStorage.setItem(\"SAVE_TIMESTAMP_OPEN\", (new Date()).toString());\n\n        // Load Save Data\n        const saveDataCompletedLevel = localStorage.getItem(\"SAVE_COMPLETED_LEVEL\");\n        if (saveDataCompletedLevel !== null)\n          setCompletedLevel(parseInt(saveDataCompletedLevel));\n\n        const saveDataPressedLetters = localStorage.getItem(\"SAVE_PRESSED_LETTERS\");\n        if (saveDataPressedLetters !== null)\n          setPressedLetters(saveDataPressedLetters);\n\n        const saveDataCorrectLetters = localStorage.getItem(\"SAVE_CORRECT_LETTERS\");\n        if (saveDataCorrectLetters !== null)\n          setCorrectLetters(saveDataCorrectLetters);\n\n        const saveDataWrongLetters = localStorage.getItem(\"SAVE_WRONG_LETTERS\");\n        if (saveDataWrongLetters !== null)\n          setWrongLetters(saveDataWrongLetters);\n\n        const saveDataStreak = localStorage.getItem(\"SAVE_STREAK\");\n        if (saveDataStreak !== null)\n          setStreak(parseInt(saveDataStreak));\n\n        const saveDataSuperStreak = localStorage.getItem(\"SAVE_STREAK_SUPER\");\n        if (saveDataSuperStreak !== null)\n          setSuperStreak(parseInt(saveDataSuperStreak));\n\n        const saveDataSuperStreakHighScore = localStorage.getItem(\"SAVE_STREAK_SUPER_HIGH_SCORE\");\n        if (saveDataSuperStreakHighScore !== null)\n          setSuperStreakHighScore(parseInt(saveDataSuperStreakHighScore));\n\n        const saveDataHistory = localStorage.getItem(\"SAVE_HISTORY\");\n        if (saveDataHistory !== null)\n          setHistory(JSON.parse(saveDataHistory));\n\n\n\n        // Check to see if game is already won\n        if (checkGameLost(wrongLetters)) {\n          setGameState(\"GAME_LOST\");\n        } else if (checkGameWon(correctLetters, levelData.goalPhrase)) {\n          setGameState(\"GAME_WON\");\n        }\n\n\n        // Display the help menu for first time players\n        const isFirstTime = localStorage.getItem(\"SAVE_FIRST_TIME\");\n        if (isFirstTime === null || parseInt(isFirstTime) === 0) {\n          localStorage.setItem(\"SAVE_FIRST_TIME\", 1);\n          setHelpMenuShown(1);\n        }\n\n      });\n\n\n\n    })\n\n  }, []);\n\n\n  // ------ CHECKERS\n\n  // Letters Updated\n  useEffect(() => {\n    if (checkGameLost(wrongLetters)) {\n      setGameState(\"GAME_LOST\");\n    } else if (checkGameWon(correctLetters, levelData.goalPhrase)) {\n      setGameState(\"GAME_WON\");\n    }\n  }, [correctLetters, wrongLetters]);\n\n\n\n  // Game Completion Updates\n  useEffect(() => {\n\n    const isGameOver = gameState === \"GAME_WON\" || gameState === \"GAME_LOST\";\n    if (isGameOver) {\n\n      if (gameState == \"GAME_WON\") {\n        setGameState(\"GAME_WON\");\n\n        // single fire on completion \n        if (completedLevel === 0) {\n\n          // increase streak\n          setStreak(streak <= 0 ? 1 : streak + 1);\n\n          if (wrongLetters.length === 0)\n            setSuperStreak(superStreak <= 0 ? 1 : superStreak + 1);\n          else\n            setSuperStreak(0);\n        }\n      }\n      else if (gameState == \"GAME_LOST\") {\n\n        // single fire on completion\n        if (completedLevel === 0) {\n          // break streak\n          setStreak(0);\n          setSuperStreak(0);\n        }\n      }\n\n\n      // single fire on completion\n      if (completedLevel === 0) {\n        // ---- record history\n        const currentHistory = history;\n\n\n        let newHistory = {...currentHistory};\n        \n        // initialises if history is empty\n        if (Object.keys(newHistory).length == 0) {\n          newHistory[\"daysPlayed\"] = [];\n          newHistory[\"results\"] = {};\n        }\n\n        // adds to history\n        newHistory[\"daysPlayed\"].push(levelIndex);\n\n        const historyResult = {\"correctLetters\": correctLetters, \"wrongLetters\": wrongLetters};\n        newHistory[\"results\"][levelIndex] = historyResult;\n\n        setHistory(newHistory);\n      }\n\n\n      // switches single fire latch (requires loading a new day to switch is back)\n      setCompletedLevel(1);\n    }\n\n\n\n\n    // record history\n\n  }, [gameState]);\n\n\n\n\n\n\n  // Save Data\n  useEffect(() => {\n    if (pressedLetters.length === 0) return;\n    localStorage.setItem(\"SAVE_PRESSED_LETTERS\", pressedLetters);\n  }, [pressedLetters]);\n  useEffect(() => {\n    if (correctLetters.length === 0) return;\n    localStorage.setItem(\"SAVE_CORRECT_LETTERS\", correctLetters);\n  }, [correctLetters]);\n  useEffect(() => {\n    if (wrongLetters.length === 0) return;\n    localStorage.setItem(\"SAVE_WRONG_LETTERS\", wrongLetters);\n  }, [wrongLetters]);\n\n  useEffect(() => {\n    if (streak === -1) return;\n    if (DEMO_MODE) return;\n    localStorage.setItem(\"SAVE_STREAK\", streak);\n    console.log(\"Streak is now: \" + streak);\n  }, [streak]);\n\n  useEffect(() => {\n    if (superStreak === -1) return;\n    if (DEMO_MODE) return;\n    localStorage.setItem(\"SAVE_STREAK_SUPER\", superStreak);\n  }, [superStreak]);\n\n  useEffect(() => {\n    if (superStreakHighScore === -1) return;\n    if (DEMO_MODE) return;\n    localStorage.setItem(\"SAVE_STREAK_SUPER_HIGH_SCORE\", superStreakHighScore);\n  }, [superStreakHighScore]);\n\n  useEffect(() => {\n    if (completedLevel === -1) return;\n    localStorage.setItem(\"SAVE_COMPLETED_LEVEL\", completedLevel);\n  }, [completedLevel]);\n\n\n  useEffect(() => {\n    if (Object.keys(history).length === 0) return;\n    localStorage.setItem(\"SAVE_HISTORY\", JSON.stringify(history));\n    console.log(\"History is saved as \" + JSON.stringify(history));\n  }, [history]);\n\n\n\n\n\n  return (\n    <div className=\"App\">\n\n\n      <AppContext.Provider value={{\n        onSelectLetter,\n\n        levelData, setLevelData,\n        gameState, setGameState,\n        pressedLetters, setPressedLetters,\n        correctLetters, setCorrectLetters,\n        wrongLetters, setWrongLetters,\n        isLastLetterCorrect, setIsLastLetterCorrect,\n        completedLevel, setCompletedLevel,\n        streak, setStreak,\n        superStreak, setSuperStreak,\n        superStreakHighScore, setSuperStreakHighScore,\n        setAcceptSelectLetter, acceptSelectLetter,\n        gameTitle, setGameTitle,\n        gameURL, setGameURL,\n        levelIndex, setLevelIndex,\n        livesCompletedPulse, setLivesCompletedPulse,\n        helpMenuShown, setHelpMenuShown,\n        history, setHistory\n      }}>\n\n        <Header />\n        <Game />\n\n        <Footer />\n\n\n        <HelpMenu />\n      </AppContext.Provider>\n\n    </div>);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  //<React.StrictMode>\n    <App />\n // </React.StrictMode>\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}